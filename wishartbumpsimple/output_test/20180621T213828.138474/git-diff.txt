diff --git a/.DS_Store b/.DS_Store
index 08c8315..dd655dc 100644
Binary files a/.DS_Store and b/.DS_Store differ
diff --git a/wishart/gen_cc.py b/wishart/gen_cc.py
index b061c72..bd368df 100644
--- a/wishart/gen_cc.py
+++ b/wishart/gen_cc.py
@@ -6,7 +6,7 @@ from notebooks.sigthresh import *
 
 codystring  = 'codylong'
 jimstring = 'jhhalverson'
-outdir = 'randomwalk'
+outdir = 'randomwalkwithscores'
 
 def writeScript(eps,nmod,sigma,max_steps,personstring,beta,power,gam,arch):
     out = "#!/bin/bash"
@@ -83,12 +83,12 @@ def writeScript(eps,nmod,sigma,max_steps,personstring,beta,power,gam,arch):
 
 
 #june 17 random walk run
-for eps in [5e-36]:
-    for sigma in [1e-20]:
+for eps in [1e-50]:
+    for sigma in [1e-4]:
         for power in [0]: # used to be 1 3 2
-            for nmod in [10]:
-                for max_steps in ['10k']:
-                    for beta in [1]:
+            for nmod in [10,25]:
+                for max_steps in ['10k','100k']:
+                    for beta in [1e6]:
                         for gam in [.99]:
                             for arch in ["FFSoftmax"]:
                                writeScript(eps,nmod,sigma,max_steps,codystring,beta,power,gam,arch)
diff --git a/wishart/gym_cc/cc.py b/wishart/gym_cc/cc.py
index db2dbf2..0e4b78f 100644
--- a/wishart/gym_cc/cc.py
+++ b/wishart/gym_cc/cc.py
@@ -45,6 +45,7 @@ class CC(gym.Env):
 		self.max_neg_cc = mpf(-1e6)
 		self.init_cc_printed = False
 		self.global_t = 0
+		self.trackscore = 0
 
 	def second_init(self): # after nmod, sigma, eps are set, can run this
 		###make sure eps is set at desired accuracy
@@ -122,6 +123,7 @@ class CC(gym.Env):
 		self.ngvec = newngvec
 		my_reward = self.reward(cc)
 		self.cc = cc
+		self.trackscore += my_reward
 
 		# sanity check for high precision cc calculation
 		#shifted_state = np.array(self.state) + np.array(self.origin)
@@ -154,6 +156,20 @@ class CC(gym.Env):
 		self.cc = self.barecc + np.dot(np.dot(self.metric,self.origin),self.origin)
 		if self.init_cc_printed == True:
 			print 'initial cc:', self.cc
+		
+		# create path to file if necessary (it shouldn't be, the path should've been created by the training program
+		if not os.path.exists(os.path.dirname(self._outputFilePath)):
+			try:
+				os.makedirs(os.path.dirname(self._outputFilePath))
+			except OSError as exc: # Guard against race condition
+				if exc.errno != errno.EEXIST:
+					raise
+		   
+		# update the file
+		hnd = open(self._outputFilePath, 'a+')
+		hnd.write("rws " + str((self.process_idx,self.global_t,self.trackscore,self.state))+"\n")
+		hnd.close()
+		self.trackscore = 0
 		return np.array(self.state)
 	
 	def dist(self,cc):
@@ -163,7 +179,8 @@ class CC(gym.Env):
 		d = self.dist(cc)
 		do = self.dist(self.occ)
 		#print np.float(1/d), np.float(1/d**self.pow) 
-		return np.float(1/d**self.pow)
+		#return np.float(1/d**self.pow)
+		return 0
 		
 	def random_metric(self): # pos def metric
 		#A = np.random.normal(size=(self.nmod,self.nmod), scale = self.sigma)
